version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafkanet
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - kafkanet

  capture_service:
    build: ./capture_service
    depends_on:
      - kafka
    devices:
      - "/dev/video0:/dev/video0"   # For webcam access on Linux; remove if not applicable
    volumes:
      - ./capture_service:/app
    networks:
      - kafkanet

      
  # ---- Two containers for inference ----

  inference_web:
    build: ./inference_service
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - "8000:8000"
    networks:
      - kafkanet
    volumes:
      - ./inference_service:/app
      - ./output:/output
    depends_on:
      - kafka

  inference_consumer:
    build: ./inference_service
    command: ["python", "manage.py", "consume_infer"]
    networks:
      - kafkanet
    volumes:
      - ./inference_service:/app
      - ./output:/output
    depends_on:
      - kafka

networks:
  kafkanet:
    driver: bridge